import * as React from "react";
import { StyleProp, ViewStyle, ColorValue } from "react-native";
export declare enum SFSymbolWeight {
    ULTRALIGHT = "ultralight",
    LIGHT = "light",
    THIN = "thin",
    REGULAR = "regular",
    MEDIUM = "medium",
    SEMIBOLD = "semibold",
    BOLD = "bold",
    HEAVY = "heavy"
}
export declare enum SFSymbolScale {
    SMALL = "small",
    MEDIUM = "medium",
    LARGE = "large"
}
export declare type SymbolWeight = "ultralight" | "light" | "thin" | "regular" | "medium" | "semibold" | "bold" | "heavy";
export declare type SymbolScale = "small" | "medium" | "large";
export declare type SymbolResizeMode = "scale-to-fill" | "scale-aspect-fit" | "scale-aspect-fill" | "redraw" | "center" | "top" | "bottom" | "left" | "right" | "top-left" | "top-right" | "bottom-left" | "bottom-right" | "cover" | "contain" | "stretch";
export interface SFSymbolProps {
    name: string;
    color?: ColorValue;
    style?: StyleProp<ViewStyle>;
    size?: number;
    resizeMode?: SymbolResizeMode;
    weight?: SymbolWeight;
    scale?: SymbolScale;
    multicolor?: boolean;
}
export declare class SFSymbol extends React.PureComponent<SFSymbolProps> {
    render(): JSX.Element;
}
